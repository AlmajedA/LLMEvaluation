version: '3.9'

services:
  backend:
    image: backend-dev
    build:
      context: ./backend
    command: >
      sh -c "python manage.py makemigrations &&
            python manage.py migrate &&
            python manage.py runscript load_chroma &&
            python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend/app:/backend/app
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - CHROMA_HOST_PORT=${CHROMA_HOST_PORT}
      - CHROMA_HOST_NAME=${CHROMA_HOST_NAME}
      - CHROMA_SERVER_AUTHN_CREDENTIALS=${CHROMA_SERVER_AUTHN_CREDENTIALS}
      - CHROMA_CLIENT_AUTHN_PROVIDER=${CHROMA_CLIENT_AUTHN_PROVIDER}
      - CHROMA_AUTH_TOKEN_TRANSPORT_HEADER=${CHROMA_AUTH_TOKEN_TRANSPORT_HEADER}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - HUGGING_FACE_API_KEY=${HUGGING_FACE_API_KEY}
      - REPLICATE_API_TOKEN=${REPLICATE_API_TOKEN}
    ports:
      - "8000:8000"
    restart: always
    depends_on:
      - chromadb

  frontend:
    image: frontend-dev
    build:
      context: ./nginx/frontend
    ports:
      - "4200:4200"
    depends_on:
      - backend
    
  chromadb:
    image: ghcr.io/chroma-core/chroma:latest
    volumes:
      - chroma-data:/chroma/chroma
    environment:
      - IS_PERSISTENT=TRUE
      - ANONYMIZED_TELEMETRY=FALSE
      - CHROMA_HOST_PORT=${CHROMA_HOST_PORT}
      - CHROMA_SERVER_AUTHN_CREDENTIALS=${CHROMA_SERVER_AUTHN_CREDENTIALS}
      - CHROMA_SERVER_AUTHN_PROVIDER=${CHROMA_SERVER_AUTHN_PROVIDER}
      - CHROMA_AUTH_TOKEN_TRANSPORT_HEADER=${CHROMA_AUTH_TOKEN_TRANSPORT_HEADER}
    ports:
      - '${CHROMA_HOST_PORT}:${CHROMA_HOST_PORT}'

volumes:
  chroma-data:
    driver: local